[build-system]
requires = ["setuptools", "wheel"]

[project]
name = "nitrate-tcms"
version = "0.1.0"
description = "A full-featured Test Case Management System"
readme = "README.rst"
authors = [
    {name = "Nitrate Team"}
]
maintainers = [
    {name = "Chenxiong Qi", email = "qcxhome@gmail.com"}
]
license = {text = "GPLv2+"}
keywords = ["test", "case", "plan", "run"]
requires-python = ">=3.9"
classifiers = [
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing"
]
dependencies = [
    "beautifulsoup4==4.12.3",
    "django>=4.2,<4.3",
    "django-contrib-comments==2.2.0",
    "django-tinymce==3.5.0",
    "django-uuslug==2.0.0",
    "html2text==2024.2.26",
    "odfpy==1.4.1",
    "xmltodict==0.13.0",
    "kobo==0.37.0",
    "django-debug-toolbar (>=5.1.0,<6.0.0)",
    "mysqlclient (>=2.2.7,<3.0.0)",
]
dynamic = ["version"]

[project.optional-dependencies]
mysql = ["mysqlclient==2.2.4"]
pgsql = ["psycopg2==2.9.9"]
krbauth = ["kerberos==1.3.1"]
bugzilla = ["python-bugzilla==3.2.0"]
socialauth = ["social-auth-app-django==5.4.2"]
async = ["celery==5.4.0"]
docs = ["Sphinx >= 1.1.2", "sphinx_rtd_theme"]
devtools = [
    "black",
    "django-debug-toolbar",
    "django-stubs",
    "tox",
    # Build tool to build sdist: python3 -m build
    "build",
]
tests = [
    "coverage[toml]",
    "factory_boy",
    "flake8",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "sqlparse",
    "tox",
]

[project.urls]
Repository = "https://github.com/Nitrate/Nitrate"
Documentation = "https://nitrate.readthedocs.io/"
"Issue Tracker" = "https://github.com/Nitrate/Nitrate/issues"
"Source Code" = "https://github.com/Nitrate/Nitrate"
"Release Notes" = "https://nitrate.readthedocs.io/en/latest/releases/"
"Container Images" = "https://quay.io/organization/nitrate"

[tool.poetry]
name = "nitrate-tcms"
version = "0.1.0"
description = "Your description"
authors = ["Your Name <you@example.com>"]
package-mode = false

[tool.setuptools]
platforms = ["any"]
zip-safe = false
include-package-data = true

[tool.setuptools.dynamic]
version = {file = "VERSION.txt"}

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*"]
namespaces = false

[tool.black]
line-length = 100
target-version = ['py310']
check = 1
diff = 1

[tool.isort]
line_length = 100
extend_skip = ["migrations"]
profile = "black"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
ignore_missing_imports = 1
exclude = ["settings", "migrations"]

[tool.django-stubs]
django_settings_module = "tcms.settings.devel"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tcms.settings.test"
python_files = "test_*.py"
addopts = "--cov=src/tcms/ --cov-report=term --cov-report=html --cov-report=xml"
# This magic value causes py.test does not collect arbitrary classes, like
# Nitrate's TestCase, TestPlan, and TestRun, that are wrongly treated as tests.
# This value lets py.test only collect classes that is derived from either
# django.test.TestCase or unittest.TestCase
# So, if anyone writes a test class with a name including this string, it is
# incorrect.
# Refer to http://doc.pytest.org/en/latest/customize.html#confval-python_classes
python_classes = "*xxxxxxxxx*"

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_covered = true
omit = [
    "*/migrations/*.py",
    "src/tcms/celery.py",
    "src/tcms/__init__.py",
    "src/tcms/settings/*.py",
    "src/tcms/wsgi.py",
    "*/urls.py",
    "*/urls/*.py"
]
